name: Continuous Integration and Delivery
on: [push, pull_request]
env:
  NODE_VERSION: 16.14.0
jobs:
  install:
    name: 'Installing NPM modules'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Caching NPM modules if necessary'
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
  build-platform:
    name: 'Building Platform'
    needs: install
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.root-package-json.outputs.version }}
      version-dasherized: ${{ steps.root-package-json.outputs.version-dasherized }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Reading package.json version of project root'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/package-json@master
        id: root-package-json
        with:
          path: package.json
      - name: 'Reading package.json version of scion/microfrontend-platform'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/package-json@master
        id: microfrontend-platform-package-json
        with:
          path: projects/scion/microfrontend-platform/package.json
      - name: 'Asserting package.json versions to be equal'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/equality-checker@master
        with:
          values: |
            ${{ steps.root-package-json.outputs.version }},
            ${{ steps.microfrontend-platform-package-json.outputs.version }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Building @scion/microfrontend-platform'
        run: npm run microfrontend-platform:build
      - name: 'Building API Documentation (TypeDoc)'
        run: npm run microfrontend-platform:typedoc
      - name: 'Building Reference Documentation (Developer Guide)'
        run: npm run microfrontend-platform:adoc -- -a revnumber=${{ steps.root-package-json.outputs.version }} -a revnumber-dasherized=${{ steps.root-package-json.outputs.version-dasherized }}
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  build-apps:
    name: 'Building Apps'
    needs: build-platform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: microfrontend-platform-devtools-vercel
            cmd: npm run microfrontend-platform-devtools-vercel:build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Downloading platform (dist)'
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: 'Building ${{ matrix.app.name }}'
        run: ${{ matrix.app.cmd }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.app.name }}
          path: dist/${{ matrix.app.name }}
  release:
    name: 'Releasing'
    needs: [build-platform, build-apps]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Downloading platform and documentation (dist)'
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: 'Downloading app: microfrontend-platform-devtools-vercel (dist)'
        uses: actions/download-artifact@v2
        with:
          name: microfrontend-platform-devtools-vercel
          path: dist/microfrontend-platform-devtools-vercel
      - name: 'Restoring NPM modules from cache'
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: 'Deploying microfrontend-platform-devtools to Vercel'
        uses: SchweizerischeBundesbahnen/scion-toolkit/.github/actions/vercel-deploy@master
        with:
          dist-folder: dist/microfrontend-platform-devtools-vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          org-id: ${{ secrets.VERCEL_ORG_ID }}
          project-id: ${{ secrets.VERCEL_MICROFRONTEND_PLATFORM_DEVTOOLS_PROJECT_ID }}
          version: ${{ needs.build-platform.outputs.version }}
          aliases: |
            scion-microfrontend-platform-devtools.vercel.app,
            scion-microfrontend-platform-devtools-v%v.vercel.app
